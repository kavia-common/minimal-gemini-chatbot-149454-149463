{"is_source_file": true, "format": "Python", "description": "This file defines API endpoints for a chatbot service backed by Google Generative AI. It includes schema definitions, request handlers for multiple routes, fallback mechanisms when AI services are unavailable, and configuration of the chat response process.", "external_files": ["flask", "flask_smorest", "marshmallow", "google.generativeai"], "external_methods": ["flask.make_response", "flask_smorest.Blueprint", "marshmallow.Schema", "marshmallow.fields", "marshmallow.ValidationError"], "published": ["Chat", "ChatRequestSchema", "ChatResponseSchema", "_handle_chat", "blp"], "classes": [{"name": "ChatRequestSchema", "description": "Schema for the chat request containing a 'message' string field."}, {"name": "ChatResponseSchema", "description": "Schema for the chat response containing a 'reply' string field."}], "methods": [{"name": "_ok_preflight_response()", "description": "Returns a 204 empty response for CORS preflight.", "scope": "", "scopeKind": ""}, {"name": "dict _friendly_fallback(message: str)", "description": "Provides a user-friendly fallback reply when the model is unavailable or errors occur.", "scope": "", "scopeKind": ""}, {"name": "dict _fake_or_fallback(message: str, allow_fake: bool)", "description": "Returns either a fake echo message or the friendly fallback based on configuration.", "scope": "", "scopeKind": ""}, {"name": "bool _bool_env(name: str, default: bool = False)", "description": "Reads a boolean environment variable, defaulting if not set.", "scope": "", "scopeKind": ""}, {"name": "_safe_abort_bad_request(msg: str)", "description": "Returns a 400 response with an error message in JSON format.", "scope": "", "scopeKind": ""}, {"name": "_handle_chat(message: str)", "description": "Core handler that processes the chat message, interacts with the AI model, and handles errors/fallbacks.", "scope": "", "scopeKind": ""}, {"name": "__init__(self, *args, **kwargs)", "scope": "ChatResponseSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "options(self)", "scope": "SendResource", "scopeKind": "class", "description": "unavailable"}, {"name": "post(self, message=None)", "scope": "SendResource", "scopeKind": "class", "description": "unavailable"}], "calls": ["genai.configure", "genai.GenerativeModel", "model.generate_content", "logger.info", "logger.warning", "logger.error", "logger.exception"], "search-terms": ["ChatRequestSchema", "ChatResponseSchema", "Google Generative AI", "chat endpoint", "fallback reply", "model.generate_content", "GEMINI_API_KEY", "flask_smorest Blueprint"], "state": 2, "file_id": 7, "knowledge_revision": 40, "git_revision": "47754cce0b8b87c0bc049e8e5c1af26d673fef42", "revision_history": [{"15": ""}, {"17": "f89760bceaa44014b323f005e3721b6f2f3a73f3"}, {"18": "f89760bceaa44014b323f005e3721b6f2f3a73f3"}, {"21": "b5541b144ea056ad0a38fa72f19ed7d12ca7d5c6"}, {"23": "5bdc06955529406413de1d094ac062d8fa4c6952"}, {"27": "a101a957067c49638750df6d90cbbfed2b2865f0"}, {"31": "f381ed5f77278856dbcf7fb92c55e8145fd1f1ae"}, {"33": "3d546ac5ef5573e50ae79dc061003d789d2fddf3"}, {"35": "3d546ac5ef5573e50ae79dc061003d789d2fddf3"}, {"36": "3d546ac5ef5573e50ae79dc061003d789d2fddf3"}, {"37": "3d546ac5ef5573e50ae79dc061003d789d2fddf3"}, {"40": "47754cce0b8b87c0bc049e8e5c1af26d673fef42"}], "ctags": [{"_type": "tag", "name": "ChatRequestSchema", "path": "/home/kavia/workspace/code-generation/minimal-gemini-chatbot-149454-149463/flask_backend/app/routes/chat.py", "pattern": "/^class ChatRequestSchema(Schema):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "ChatResource", "path": "/home/kavia/workspace/code-generation/minimal-gemini-chatbot-149454-149463/flask_backend/app/routes/chat.py", "pattern": "/^class ChatResource(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "ChatResponseSchema", "path": "/home/kavia/workspace/code-generation/minimal-gemini-chatbot-149454-149463/flask_backend/app/routes/chat.py", "pattern": "/^class ChatResponseSchema(Schema):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "MessageResource", "path": "/home/kavia/workspace/code-generation/minimal-gemini-chatbot-149454-149463/flask_backend/app/routes/chat.py", "pattern": "/^class MessageResource(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "SendResource", "path": "/home/kavia/workspace/code-generation/minimal-gemini-chatbot-149454-149463/flask_backend/app/routes/chat.py", "pattern": "/^class SendResource(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/minimal-gemini-chatbot-149454-149463/flask_backend/app/routes/chat.py", "pattern": "/^    def __init__(self, *args, **kwargs):$/", "language": "Python", "kind": "member", "signature": "(self, *args, **kwargs)", "scope": "ChatRequestSchema", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/minimal-gemini-chatbot-149454-149463/flask_backend/app/routes/chat.py", "pattern": "/^    def __init__(self, *args, **kwargs):$/", "language": "Python", "kind": "member", "signature": "(self, *args, **kwargs)", "scope": "ChatResponseSchema", "scopeKind": "class"}, {"_type": "tag", "name": "_bool_env", "path": "/home/kavia/workspace/code-generation/minimal-gemini-chatbot-149454-149463/flask_backend/app/routes/chat.py", "pattern": "/^def _bool_env(name: str, default: bool = False) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(name: str, default: bool = False)"}, {"_type": "tag", "name": "_fake_or_fallback", "path": "/home/kavia/workspace/code-generation/minimal-gemini-chatbot-149454-149463/flask_backend/app/routes/chat.py", "pattern": "/^def _fake_or_fallback(message: str, allow_fake: bool) -> dict:$/", "language": "Python", "typeref": "typename:dict", "kind": "function", "signature": "(message: str, allow_fake: bool)"}, {"_type": "tag", "name": "_friendly_fallback", "path": "/home/kavia/workspace/code-generation/minimal-gemini-chatbot-149454-149463/flask_backend/app/routes/chat.py", "pattern": "/^def _friendly_fallback(message: str) -> dict:$/", "language": "Python", "typeref": "typename:dict", "kind": "function", "signature": "(message: str)"}, {"_type": "tag", "name": "_handle_chat", "path": "/home/kavia/workspace/code-generation/minimal-gemini-chatbot-149454-149463/flask_backend/app/routes/chat.py", "pattern": "/^def _handle_chat(message: str):$/", "language": "Python", "kind": "function", "signature": "(message: str)"}, {"_type": "tag", "name": "_ok_preflight_response", "path": "/home/kavia/workspace/code-generation/minimal-gemini-chatbot-149454-149463/flask_backend/app/routes/chat.py", "pattern": "/^def _ok_preflight_response():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "_safe_abort_bad_request", "path": "/home/kavia/workspace/code-generation/minimal-gemini-chatbot-149454-149463/flask_backend/app/routes/chat.py", "pattern": "/^def _safe_abort_bad_request(msg: str):$/", "language": "Python", "kind": "function", "signature": "(msg: str)"}, {"_type": "tag", "name": "blp", "path": "/home/kavia/workspace/code-generation/minimal-gemini-chatbot-149454-149463/flask_backend/app/routes/chat.py", "pattern": "/^blp = Blueprint($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "formatter", "path": "/home/kavia/workspace/code-generation/minimal-gemini-chatbot-149454-149463/flask_backend/app/routes/chat.py", "pattern": "/^    formatter = logging.Formatter(\"%(asctime)s %(levelname)s [%(name)s] %(message)s\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "genai", "path": "/home/kavia/workspace/code-generation/minimal-gemini-chatbot-149454-149463/flask_backend/app/routes/chat.py", "pattern": "/^    genai = None$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "genai", "path": "/home/kavia/workspace/code-generation/minimal-gemini-chatbot-149454-149463/flask_backend/app/routes/chat.py", "pattern": "/^    import google.generativeai as genai$/", "language": "Python", "kind": "namespace", "nameref": "module:google.generativeai"}, {"_type": "tag", "name": "handler", "path": "/home/kavia/workspace/code-generation/minimal-gemini-chatbot-149454-149463/flask_backend/app/routes/chat.py", "pattern": "/^    handler = logging.StreamHandler()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/code-generation/minimal-gemini-chatbot-149454-149463/flask_backend/app/routes/chat.py", "pattern": "/^logger = logging.getLogger(__name__)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "message", "path": "/home/kavia/workspace/code-generation/minimal-gemini-chatbot-149454-149463/flask_backend/app/routes/chat.py", "pattern": "/^    message = fields.String(required=False, allow_none=True, metadata={\"description\": \"User mess/", "language": "Python", "kind": "variable", "scope": "ChatRequestSchema", "scopeKind": "class"}, {"_type": "tag", "name": "options", "path": "/home/kavia/workspace/code-generation/minimal-gemini-chatbot-149454-149463/flask_backend/app/routes/chat.py", "pattern": "/^    def options(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "ChatResource", "scopeKind": "class"}, {"_type": "tag", "name": "options", "path": "/home/kavia/workspace/code-generation/minimal-gemini-chatbot-149454-149463/flask_backend/app/routes/chat.py", "pattern": "/^    def options(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "MessageResource", "scopeKind": "class"}, {"_type": "tag", "name": "options", "path": "/home/kavia/workspace/code-generation/minimal-gemini-chatbot-149454-149463/flask_backend/app/routes/chat.py", "pattern": "/^    def options(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "SendResource", "scopeKind": "class"}, {"_type": "tag", "name": "post", "path": "/home/kavia/workspace/code-generation/minimal-gemini-chatbot-149454-149463/flask_backend/app/routes/chat.py", "pattern": "/^    def post(self, message=None):$/", "language": "Python", "kind": "member", "signature": "(self, message=None)", "scope": "ChatResource", "scopeKind": "class"}, {"_type": "tag", "name": "post", "path": "/home/kavia/workspace/code-generation/minimal-gemini-chatbot-149454-149463/flask_backend/app/routes/chat.py", "pattern": "/^    def post(self, message=None):$/", "language": "Python", "kind": "member", "signature": "(self, message=None)", "scope": "MessageResource", "scopeKind": "class"}, {"_type": "tag", "name": "post", "path": "/home/kavia/workspace/code-generation/minimal-gemini-chatbot-149454-149463/flask_backend/app/routes/chat.py", "pattern": "/^    def post(self, message=None):$/", "language": "Python", "kind": "member", "signature": "(self, message=None)", "scope": "SendResource", "scopeKind": "class"}, {"_type": "tag", "name": "reply", "path": "/home/kavia/workspace/code-generation/minimal-gemini-chatbot-149454-149463/flask_backend/app/routes/chat.py", "pattern": "/^    reply = fields.String(required=True, metadata={\"description\": \"Model reply\"})$/", "language": "Python", "kind": "variable", "scope": "ChatResponseSchema", "scopeKind": "class"}], "hash": "29891ce0b7d22f81987e6f7691a25e6c", "format-version": 4, "code-base-name": "flask_backend", "filename": "flask_backend/app/routes/chat.py", "fields": [{"name": "blp = Blueprint(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "formatter = logging.Formatter(\"%(asctime)s %(levelname)s [%(name)s] %(message)s\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "genai = None", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "handler = logging.StreamHandler()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "logger = logging.getLogger(__name__)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "message = fields.String(required=False, allow_none=True, metadata={\"description\": \"User mess/", "scope": "ChatRequestSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "reply = fields.String(required=True, metadata={\"description\": \"Model reply\"})", "scope": "ChatResponseSchema", "scopeKind": "class", "description": "unavailable"}]}